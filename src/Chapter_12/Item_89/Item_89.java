package Chapter_12.Item_89;



/* 인스턴스 수를 통제해야 한다면 readResolve 보다는 열거 타입을 사용하라

- 싱글톤과 같이 불변식을 지킬려면, 열거 타입을 사용하자
- readResolve를 사용한다면, 반드시 모든 참조 타입 인스턴스 필드르 transient로 선언해야 한다.

싱글턴 클래스 직렬화 문제
- 싱글턴 클래스를 직렬화 하려고 Seriablizable를 구현하면, 더 이상 싱글턴이 아니게 된다. 
  어떤 readObject를 사용하던 클래스가 초기화 될 때 만들어진 인스턴스와는 별개의 인스턴스가 생성되기 때문이다.
  
싱글턴 클래스 직렬화 문제 해결
- readResolve 메서드를 통해, 기본 객체의 참조를 반환하면 된다.
- readResolve 메서드는 역직렬화 중에 생선된 객체를 다른 객체로 대체하는데 사용된다.
  -> 만약 역직렬화 과정에서 자동으로 호출되는 readObject 메서드가 있더라도 readResolve 메서드에서 반환한 
     인스턴스로 대체되기 때문에, readObejct 메서ㄷ를 통해 만들어진 인스턴스는 더이상 유지되지 않아, 싱글톤을 보장 할 수 있다.
     
공격 받을 수 있는 경우
- 만약 싱글턴이 non-transient 참조를 가지고 있다면, 해당 필드의 내용은 readResolve 메서드가 수행되기 이전에 역직렬화 된다.
  따라서 그 시점에 역직렬화 된 인스턴스의 참조를 가져와서 공격에 이용할 수 있다.
- transient를 붙이면 해결할 수 있지만, 열거 타입이 훨씬 나은 방안이다. 해당 enum 제외 다른 객체는 존재하지 않음을
  자바가 보장해주기 때문에 안전하다. 
* */
public class Item_89 {
}
